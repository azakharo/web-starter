swagger: '2.0'
info:
  description: >-
    WebStarter is a boilerplate project. It's based on Angular Fullstack
    generator. It contains both: client and server.
  version: 1.0.0
  title: WebStarter
  contact:
    email: zangular@yandex.ru
host: '127.0.0.1:9000'
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /things:
    get:
      tags:
        - things
      summary: List all thing
      description: ''
      operationId: index
      responses:
        '200':
          description: All things stored
          schema:
            type: array
            items:
              $ref: '#/definitions/Thing'
    post:
      tags:
        - things
      summary: Add a new thing
      description: ''
      operationId: create
      parameters:
        - name: thing
          in: body
          description: Thing to be added
          required: true
          schema:
            $ref: '#/definitions/Thing'
      responses:
        '201':
          description: The thing has been added successfully
          schema:
            $ref: '#/definitions/Thing'
  '/things/{thingId}':
    parameters:
      - name: thingId
        in: path
        description: Thing ID
        required: true
        type: string
    get:
      tags:
        - things
      summary: Get thing by ID
      description: Returns a single thing
      operationId: show
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Thing'
        '404':
          description: Thing not found
    put:
      tags:
        - things
      summary: Update an existing thing
      description: ''
      operationId: update
      parameters:
        - name: thing
          in: body
          description: Thing to update the existing one
          required: true
          schema:
            $ref: '#/definitions/Thing'
      responses:
        '200':
          description: successful update
        '400':
          description: Invalid content supplied
        '404':
          description: Thing not found
    delete:
      tags:
        - things
      summary: Deletes a thing
      description: ''
      operationId: destroy
      responses:
        '200':
          description: The thing has been deleted successfully
        '404':
          description: Thing not found
  /users:
    get:
      tags:
        - users
      summary: List all users
      responses:
        '200':
          description: All users registered
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - users
      summary: Add a new user
      description: ''
      parameters:
        - name: user
          in: body
          description: User to be added
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: The user has been added successfully
  /users/me:
    get:
      tags:
        - users
      summary: Get current user
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '404':
          description: No current user found
  '/users/{userId}':
    parameters:
      - name: userId
        in: path
        required: true
        type: string
    get:
      tags:
        - users
      summary: Get user by ID
      description: Returns a single user
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '404':
          description: User not found
    delete:
      tags:
        - things
      summary: Deletes a thing
      description: ''
      responses:
        '200':
          description: The thing has been deleted successfully
        '404':
          description: Thing not found
  '/users/{userId}/password':
    put:
      tags:
        - users
      summary: Change user password
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: passwords
          in: body
          schema:
            required:
              - oldPassword
              - newPassword
            properties:
              oldPassword:
                type: string
              newPassword:
                type: string
      responses:
        '200':
          description: successful update
        '400':
          description: Invalid content supplied
  /auth/local:
    post:
      tags:
        - users
      summary: login
      parameters:
        - name: credentials
          in: body
          description: email and password
          required: true
          schema:
            required:
              - email
              - password
            properties:
              email:
                type: string
              password:
                type: string
      responses:
        '200':
          description: The user has been added logged in
definitions:
  Thing:
    type: object
    required:
      - name
    properties:
      _id:
        type: string
        readOnly: true
      name:
        type: string
        example: Greate feature of Angular Fullstack Generator
      info:
        type: string
      active:
        type: boolean
        default: true
  User:
    type: object
    required:
      - name
      - email
      - role
    properties:
      _id:
        type: string
        readOnly: true
      name:
        type: string
      email:
        type: string
      role:
        type: string
